name: 'Create AppImage'
description: 'Creates an AppImage from binaries and resources'
inputs:
  app-name:
    description: 'Name of the application'
    required: true
  app-version:
    description: 'Version of the application'
    required: true
  app-icon-name:
    description: 'Path to the application icon'
    required: true
  app-categories:
    description: 'Comma-separated list of categories'
    required: true
  bin-paths:
    description: 'Comma-separated paths to the binaries'
    required: true
  lib-paths:
    description: 'Comma-separated paths to the libraries'
    required: true
  resource-paths:
    description: 'Comma-separated paths to other resources that go into the AppDir'
    required: true
  

runs:
  using: 'composite'
  steps:

    - name: Install dependencies
      shell: bash
      run: sudo apt-get install -y libfuse2        

    - name: Create AppDir structure
      shell: bash
      run: |
        mkdir -p build/AppDir/usr/bin
        mkdir -p build/AppDir/usr/lib

        IFS=',' read -ra ADDR <<< "${{ inputs.bin-paths }}"
        for binary in "${ADDR[@]}"; do 
          cp $binary build/AppDir/usr/bin; 
        done

        IFS=',' read -ra ADDR <<< "${{ inputs.lib-paths }}"
        for lib in "${ADDR[@]}"; 
          do cp -r $lib build/AppDir/usr/lib; 
        done

        IFS=',' read -ra ADDR <<< "${{ inputs.resource-paths }}"
        for resource in "${ADDR[@]}"; do 
          cp -r $resource build/AppDir/; 
        done

    - name: Create Desktop file
      shell: bash
      run: |
        cat << EOF > build/AppDir/${{ inputs.app-name }}.desktop
        [Desktop Entry]
        Name=${{ inputs.app-name }}
        Exec=${{ inputs.app-name }}
        Icon=${{ inputs.app-icon-name }}
        Type=Application
        Categories=${{ inputs.app-categories }}
        X-AppImage-Name=${{ inputs.app-name }}
        X-AppImage-Version=${{ inputs.app-version }}
        X-AppImage-Arch=x86-64
        EOF
        chmod a+x build/AppDir/${{ inputs.app-name }}.desktop

    - name: Create AppRun file
      shell: bash
      run: |
        cat << EOF > build/AppDir/AppRun
        HERE="$(dirname "$(readlink -f "${0}")")"
        EXEC="${HERE}/usr/bin/${{ inputs.app-name }}"
        exec "\${EXEC}"
        EOF
        chmod a+x build/AppDir/AppRun   

    - name: Create AppImage
      shell: bash
      working-directory: build
      run: |
        wget --quiet "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
        chmod a+x appimagetool-x86_64.AppImage
        ./appimagetool-x86_64.AppImage build/AppDir

    - name: Debug output
      run: |
        tree
        echo Desktop:
        cat build/AppDir/${{ inputs.app-name }}.desktop
        echo
        echo AppRun:
        cat build/AppDir/AppRun
      shell: bash