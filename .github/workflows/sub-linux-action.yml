name: SUB - Build Linux with Action

on:    
  workflow_dispatch:
    inputs:
      env:
        description: 'An Environment'
        required: true
        type: choice
        options:
          - development
          - production
      version:
        description: 'A Version'
        required: true
        type: string

  workflow_call:
    inputs:
      env:
        description: 'An Environment'
        required: true
        type: string
      version:
        description: 'A Version'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:    
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          lfs: true
      
      - name: Checkout LFS objects
        run: git lfs checkout


      # Mapping values

      - name: Map Env to full-app-name
        uses: spilchen/switch-case-action@v2
        id: full-app-name
        with:
          conditionals-with-values: |
            ${{ inputs.env == 'production' }} => HaxeTemplateApplication
            ${{ inputs.env == 'development' }} => HaxeTemplateApplicationDevelopment
          default: HaxeTemplateApplication

      - name: Map Env to haxe env flag
        uses: spilchen/switch-case-action@v2
        id: haxe-env-flag
        with:
          conditionals-with-values: |
            ${{ inputs.env == 'production' }} => -final
            ${{ inputs.env == 'development' }} => -debug
          default: -final
      
      
      # Replacing values in files

      - name: Replace APP_NAME in project.xml
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: APP_NAME
          replace: ${{ steps.full-app-name.outputs.value }}
          include: project.xml
    
      - name: Replace VERSION in project.xml
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: VERSION
          replace: ${{ inputs.version }}
          include: project.xml

      - name: Replace APP_ID in project.xml
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: APP_ID
          replace: com.example.${{ steps.full-app-name.outputs.value }}
          include: project.xml

      - name: Replace APP_NAME in build/linux
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: APP_NAME
          replace: ${{ steps.full-app-name.outputs.value }}
          include: build/linux/**
  
      - name: Replace VERSION in build/linux
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: VERSION
          replace: ${{ inputs.version }}
          include: build/linux/**


      # Build preparation

      - name: Install missing system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libfuse2

      - name: Set up Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.5

      - name: Update haxelib
        run: haxelib --global update haxelib --quiet

      - name: Show haxe info
        run: |
          echo "Haxe version:"
          haxe -version
          echo "Haxe lib path:"
          haxelib config

      - name: Install haxelib dependencies
        run: |          
          haxelib install hxcpp --quiet
          haxelib install lime --quiet          
          haxelib install openfl --quiet
          haxelib install actuate --quiet
          haxelib install feathersui --quiet


      # Build

      - name: Build
        run: haxelib run openfl build project.xml linux ${{ steps.haxe-env-flag.outputs.value }} -clean


      # Create AppImage

      - name: Create AppImage
        env:
          APP_NAME: ${{ steps.full-app-name.outputs.value }}
        uses: ./.github/actions/create-appimage
        with:
          app-name: $APP_NAME
          app-version: ${{ inputs.version }}
          app-icon-name: 'feathersui'
          app-categories: 'Utility'
          bin-paths: 'bin/linux/bin/$APP_NAME'
          lib-paths: 'bin/linux/bin/lime.ndll'
          appdir-paths: 'assets/feathersui.svg'


      # Create AppImage

      - name: Upload AppImage
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.full-app-name.outputs.value }}-Setup.AppImage
          path: build/${{ steps.full-app-name.outputs.value }}-x86_64.AppImage
          


     