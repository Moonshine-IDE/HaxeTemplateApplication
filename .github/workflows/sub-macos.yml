name: SUB - Build macOS

on:    
  workflow_dispatch:
    inputs:
      env:
        description: 'An Environment'
        required: true
        type: choice
        options:
          - development
          - production
      version:
        description: 'A Version'
        required: true
        type: string

  workflow_call:
    inputs:
      env:
        description: 'An Environment'
        required: true
        type: string
      version:
        description: 'A Version'
        required: true
        type: string

env:
  APP_NAME: ${{ inputs.env == 'production' && 'HaxeTemplateApplication' || 'HaxeTemplateApplicationDevelopment' }}
  APP_ID: com.example.${{ inputs.env == 'production' && 'HaxeTemplateApplication' || 'HaxeTemplateApplicationDevelopment' }}
  HAXE_FLAG: ${{ inputs.env == 'production' && '-final' || '-debug' }}

jobs:
  build:
    runs-on: macos-latest
    
    steps:

      - name: Build info
        run: |
          echo "Ref: ${{ github.ref_name }}"
          echo "Env: ${{ inputs.env }}"
          echo "Version: ${{ inputs.version }}"
          echo "App Name: ${{ env.APP_NAME }}"
          echo "App ID: ${{ env.APP_ID }}"
          echo "HAXE_FLAG: ${{ env.HAXE_FLAG }}"

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          lfs: true
      
      - name: Checkout LFS objects
        run: git lfs checkout
      
      
      # Replacing values in files

      - name: Override project.xml title
        uses: Moonshine-IDE/xml-replace-action@v1.0
        with:
          filepath: "./project.xml"
          xpath: "/project/meta/@title"
          replace: "${{ env.APP_NAME }} ${{ inputs.version }}"

      - name: Override project.xml package
        uses: Moonshine-IDE/xml-replace-action@v1.0
        with:
          filepath: "./project.xml"
          xpath: "/project/meta/@package"
          replace: "${{ env.APP_ID }}"

      - name: Override project.xml version
        uses: Moonshine-IDE/xml-replace-action@v1.0
        with:
          filepath: "./project.xml"
          xpath: "/project/meta/@version"
          replace: "${{ inputs.version }}"

      - name: Override project.xml file
        uses: Moonshine-IDE/xml-replace-action@v1.0
        with:
          filepath: "./project.xml"
          xpath: "/project/app/@file"
          replace: "${{ env.APP_NAME }}"

      - name: Set up Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.5

      - name: Show haxe info
        run: |
          echo "Haxe version:"
          haxe -version
          echo "Haxe lib path:"
          haxelib config

      - name: Update haxelib
        run: haxelib --global update haxelib --quiet

      - name: Install haxelib dependencies
        run: |          
          haxelib install hxcpp --quiet
          haxelib install lime --quiet          
          haxelib install openfl --quiet
          haxelib install actuate --quiet
          haxelib install feathersui --quiet
          haxelib install amfio --quiet
          haxelib git champaign https://github.com/Moonshine-IDE/Champaign.git --quiet


      # Build

      - name: Build
        run: haxelib run openfl build ./project.xml mac ${{ env.HAXE_FLAG }} -clean

      - name: Show bin folder
        run: ls -R bin/macos/bin

      # Sign bin

      - name: Create keychain
        env:
          MAC_KEYCHAIN_PASS: ${{ secrets.MAC_KEYCHAIN_PASS }}
        run: |
          security create-keychain -p "$MAC_KEYCHAIN_PASS" build.keychain
          echo "Keychain created"
          security set-keychain-settings -lut 21600 build.keychain
          echo "Keychain settings set"
          security default-keychain -s build.keychain
          echo "Keychain made default"
          security unlock-keychain -p "$MAC_KEYCHAIN_PASS" build.keychain  
          echo "Keychain unlocked"

      - name: Import certificates
        env:
          MAC_APPLICATION_CERTKEY: ${{ secrets.MAC_APPLICATION_CERTKEY }}
          MAC_INSTALLER_CERTKEY: ${{ secrets.MAC_INSTALLER_CERTKEY }}
          MAC_CERTKEY_PASS: ${{ secrets.MAC_CERTKEY_PASS }}
        run: |
          echo "$MAC_APPLICATION_CERTKEY" | base64 --decode > application_certkey.p12
          echo "$MAC_INSTALLER_CERTKEY" | base64 --decode > installer_certkey.p12

          security import ./application_certkey.p12 \
            -k build.keychain \
            -f pkcs12 \
            -P "$MAC_CERTKEY_PASS" \
            -T /usr/bin/codesign \
            -T /usr/bin/productsign

          security import ./installer_certkey.p12 \
            -k build.keychain \
            -f pkcs12 \
            -P "$MAC_CERTKEY_PASS" \
            -T /usr/bin/codesign \
            -T /usr/bin/productsign
  
      - name: Allow codesign and productsign to use keychain
        env:
          MAC_KEYCHAIN_PASS: ${{ secrets.MAC_KEYCHAIN_PASS }}
        run: |
          security set-key-partition-list \
            -S apple-tool:,apple:,codesign:,productsign: \
            -s \
            -k "$MAC_KEYCHAIN_PASS" \
            build.keychain
          
      - name: Sign contents
        run: |
          codesign GBAuthHaxeMaster/bin/macos/bin/${{ env.APP_NAME }}.app \
            --sign "Developer ID Application" \
            --entitlements build/minimal.plist \
            --options runtime \
            --force \
            --timestamp \
            --verbose \
            --deep
          
      - name: Verify singature
        run: |
          codesign GBAuthHaxeMaster/bin/macos/bin/${{ env.APP_NAME }}.app \
            --display \
            --verbose \
            -r-

          codesign GBAuthHaxeMaster/bin/macos/bin/${{ env.APP_NAME }}.app \
            --verify \
            --verbose


      # Create package

      - name: Create package
        run: |
          productbuild \
            --version "${{ inputs.VERSION }}" \
            --product build/minimal.plist \
            --identifier ${{ env.APP_ID }} \
            --component bin/macos/bin/${{ env.APP_NAME }}.app \
            /Applications \
            ${{ env.APP_NAME }}-Setup-Unsigned.pkg

      # Upload bin

      - name: Upload bin
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-bin
          path: bin/macos/bin

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-Setup
          path: ${{ env.APP_NAME }}-Setup-Unsigned.pkg
          


     