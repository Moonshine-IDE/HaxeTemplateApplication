name: SUB - Build Linux

on:    
  workflow_dispatch:
    inputs:
      env:
        description: 'An Environment'
        required: true
        type: choice
        options:
          - development
          - production
      version:
        description: 'A Version'
        required: true
        type: string

  workflow_call:
    inputs:
      env:
        description: 'An Environment'
        required: true
        type: string
      version:
        description: 'A Version'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:    
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          lfs: true
      
      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Map Env to full-app-name
        uses: spilchen/switch-case-action@v2
        id: full-app-name
        with:
          conditionals-with-values: |
            ${{ inputs.env == 'production' }} => HaxeTemplateApplication
            ${{ inputs.env == 'development' }} => HaxeTemplateApplicationDevelopment
          default: HaxeTemplateApplication

      - name: Map Env to haxe env flag
        uses: spilchen/switch-case-action@v2
        id: haxe-env-flag
        with:
          conditionals-with-values: |
            ${{ inputs.env == 'production' }} => -final
            ${{ inputs.env == 'development' }} => -debug
          default: -final

      - name: Set up Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.5

      - name: Update haxelib
        run: haxelib --global update haxelib --quiet

      - name: Show haxe info
        run: |
          echo "Haxe version:"
          haxe -version
          echo "Haxe lib path:"
          haxelib config

      - name: Install missing system dependencies
        run: |
          sudo apt-get install libxinerama-dev

      - name: Install haxelib dependencies
        run: |          
          # Install hxcpp
          haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp.git --always  --quiet
          pushd .
          cd /opt/hostedtoolcache/haxe/4.2.5/x64/lib/hxcpp/git/tools/hxcpp
          haxe compile.hxml
          popd
          
          # Install lime
          git clone --recursive --depth 1 --branch 8.1.0-Dev https://github.com/openfl/lime
          haxelib dev lime lime
          
          # Install lime dependencies
          haxelib install format --quiet
          haxelib install hxp --quiet
          haxelib git lime-samples https://github.com/openfl/lime-samples --quiet
          
          # Rebuild lime
          haxelib run lime rebuild linux -release -clean
          
          # Install and setup openfl
          haxelib git openfl https://github.com/openfl/openfl.git 9.3.0-Dev --quiet
          haxelib run openfl setup --quiet
          
          # Install other dependencies
          haxelib install crypto --quiet
          haxelib install amfio --quiet
          haxelib git feathersui https://github.com/feathersui/feathersui-openfl.git --quiet
          haxelib git feathersui-cairngorm https://github.com/feathersui/feathersui-cairngorm.git --quiet
          haxelib git feathersui-rpc-services https://github.com/feathersui/feathersui-rpc-services.git --quiet
          haxelib git champaign https://github.com/Moonshine-IDE/Champaign.git --quiet
          haxelib install feathersui-validators --quiet
          haxelib install await --quiet
          haxelib install tink_core --quiet

      - name: Build
        run: haxelib run openfl build project.xml linux ${{ steps.haxe-env-flag.outputs.value }} -clean

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-${{ inputs.env }}-bin
          path: bin/linux/bin/
