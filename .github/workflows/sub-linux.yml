name: SUB - Build Linux

on:    
  workflow_dispatch:
    inputs:
      env:
        description: 'An Environment'
        required: true
        type: choice
        options:
          - development
          - production
      version:
        description: 'A Version'
        required: true
        type: string

  workflow_call:
    inputs:
      env:
        description: 'An Environment'
        required: true
        type: string
      version:
        description: 'A Version'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:    
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          lfs: true
      
      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Map Env to full-app-name
        uses: spilchen/switch-case-action@v2
        id: full-app-name
        with:
          conditionals-with-values: |
            ${{ inputs.env == 'production' }} => HaxeTemplateApplication
            ${{ inputs.env == 'development' }} => HaxeTemplateApplicationDevelopment
          default: HaxeTemplateApplication

      - name: Map Env to haxe env flag
        uses: spilchen/switch-case-action@v2
        id: haxe-env-flag
        with:
          conditionals-with-values: |
            ${{ inputs.env == 'production' }} => -final
            ${{ inputs.env == 'development' }} => -debug
          default: -final

      - name: Set up Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.5

      - name: Update haxelib
        run: haxelib --global update haxelib --quiet

      - name: Show haxe info
        run: |
          echo "Haxe version:"
          haxe -version
          echo "Haxe lib path:"
          haxelib config

      - name: Install haxelib dependencies
        run: |          
          haxelib install hxcpp --quiet
          haxelib install lime --quiet          
          haxelib install openfl --quiet
          haxelib install actuate --quiet
          haxelib install feathersui --quiet

      - name: Build
        run: haxelib run openfl build project.xml linux ${{ steps.haxe-env-flag.outputs.value }} -clean

      - name: Make AppDir
        run: |
          mkdir build/linux/HaxeTemplateApplication.AppDir
          mkdir build/linux/HaxeTemplateApplication.AppDir/usr
          mkdir build/linux/HaxeTemplateApplication.AppDir/usr/bin
          mkdir build/linux/HaxeTemplateApplication.AppDir/usr/lib
          tree bin/linux/bin
          cp bin/linux/bin/HaxeTemplateApplicationDevelopment build/linux/HaxeTemplateApplication.AppDir/usr/bin/
          cp bin/linux/bin/lime.ndll build/linux/HaxeTemplateApplication.AppDir/usr/lib/lime.ndll
          cp assets/feathersui.svg build/linux/HaxeTemplateApplication.AppDir/icon.svg
          tree build

      - name: Make AppImage
        run: |
          ARCH=x86_64 appimagetool build/linux/HaxeTemplateApplication.AppDir
          tree build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-${{ inputs.env }}-bin
          path: bin/linux/bin/
