name: SUB - Build Windows

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'An Environment'
        required: true
        type: choice
        options:
          - development
          - production
      version:
        description: 'A Version'
        required: true
        type: string
      caching:
        description: 'Use caching'
        required: true
        type: boolean
        default: false

  workflow_call:
    inputs:
      env:
        description: 'An Environment'
        required: true
        type: string
      version:
        description: 'A Version'
        required: true
        type: string
      caching:
        description: 'Use caching'
        required: true
        type: boolean
        default: false

env:
  app_name: ${{ inputs.env == 'production' && 'HaxeTemplateApplication' || 'HaxeTemplateApplicationDevelopment' }}
  app_id: net.prominic.${{ inputs.env == 'production' && 'HaxeTemplateApplication' || 'HaxeTemplateApplicationDevelopment' }}
  full_version: ${{ inputs.version }}.${{ github.run_number }}
  haxe_flag: ${{ inputs.env == 'production' && '-final' || '-debug' }}

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Set up environment

      - name: Display Build info
        run: |
          echo "Ref: ${{ github.ref_name }}"
          echo "Env: ${{ inputs.env }}"
          echo "Version: ${{ env.full_version }}"
          echo "App Name: ${{ env.app_name }}"
          echo "App ID: ${{ env.app_id }}"
          echo "haxe_flag: ${{ env.haxe_flag }}"

      - name: Set up Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.5
  
      - name: Display Haxe info
        run: |
          echo "Haxe version:"
          haxe -version
          echo "Haxe lib path:"
          haxelib config

      - name: Install NSIS plugin nsProcess
        run: |
          Invoke-RestMethod -Uri "https://nsis.sourceforge.io/mediawiki/images/1/18/NsProcess.zip" -OutFile NsProcess.7z
          7z x NsProcess.7z -o'NsProcess'
          mv NsProcess\Plugin\nsProcessW.dll "C:\Program Files (x86)\NSIS\Plugins\x86-unicode\nsProcess.dll"
          mv NSProcess\Include\nsProcess.nsh "C:\Program Files (x86)\NSIS\Include\nsProcess.nsh"

      - name: Checkout repo with LFS support
        uses: actions/checkout@v3
        with:
          lfs: true

      # Configure project

      - name: Replace values in project.xml
        uses: Moonshine-IDE/xml-replace-action@v1.0
        with:
          filepath: "./project.xml"
          xpath: "/project/meta/@title"
          replace: "${{ env.app_name }} ${{ inputs.version }} (Build: ${{ github.run_number }})"

      - name: Override project.xml package
        uses: Moonshine-IDE/xml-replace-action@v1.0
        with:
          filepath: "./project.xml"
          xpath: "/project/meta/@package"
          replace: "${{ env.app_id }}"

      - name: Override project.xml version
        uses: Moonshine-IDE/xml-replace-action@v1.0
        with:
          filepath: "./project.xml"
          xpath: "/project/meta/@version"
          replace: "${{ env.full_version }}"

      - name: Override project.xml file
        uses: Moonshine-IDE/xml-replace-action@v1.0
        with:
          filepath: "./project.xml"
          xpath: "/project/app/@file"
          replace: "${{ env.app_name }}"

      # Install dependencies and build

      - name: Cache Binaries
        id: cache-bin
        if: ${{ inputs.caching }}
        uses: actions/cache@v3
        with:
          path: bin/windows/bin
          key: ${{ env.app_name }}-windows-bin

      - name: Install haxelib dependencies
        if: ${{ !inputs.caching || !steps.cache-bin.outputs.cache-hit }}
        run: haxe --run build/InstallDependencies.hx --main InstallDependencies

      - name: Build
        if: ${{ !inputs.caching || !steps.cache-bin.outputs.cache-hit }}
        run: haxelib run openfl build ./project.xml windows ${{ env.haxe_flag }} -clean

      - name: List Build Files
        run: ls -r bin\windows\bin

      - name: Upload bin
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.app_name }}-windows-bin
          path: bin/windows/bin

      # Create installer

      - name: Create NSIS Installer
        run: |
          $binDir = Resolve-Path -Path "bin\windows\bin" | Select-Object -ExpandProperty Path
          $binPath = Join-Path -Path $binDir -ChildPath "*.*"
          $licenseFile = Resolve-Path -Path "license.MD" | Select-Object -ExpandProperty Path

          makensis `
            /DPRODUCT_NAME="${{ env.app_name }}" `
            /DPRODUCT_VERSION="${{ env.full_version }}" `
            /DPRODUCT_PUBLISHER="STARTcloud, Inc." `
            /DPRODUCT_WEB_SITE="https://github.com/Moonshine-IDE/HaxeTemplateApplication" `
            /DBIN_PATH=$binPath `
            /DPRODUCT_EXE="${{ env.app_name }}.exe" `
            /DPRODUCT_INSTALLER="${{ env.app_name }}-Setup.exe" `
            /DLICENSE_FILE=$licenseFile `
            /DROOT_KEY=HKCU `
            ./build/windows/createInstaller.nsi

      - name: Sign installer
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate\cert.txt -Value ${{ secrets.WIN_CERTKEY }}
          certutil -decode certificate\cert.txt certificate\cert.pfx

          Import-PfxCertificate `
            -FilePath certificate\cert.pfx `
            -CertStoreLocation Cert:\CurrentUser\My `
            -Password (ConvertTo-SecureString -String ${{ secrets.WIN_CERTKEY_PASS }} -Force -AsPlainText)

          & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x86/signtool.exe' sign `
            /debug `
            /fd SHA256 `
            /p ${{ secrets.WIN_CERTKEY_PASS }} `
            /f certificate\cert.pfx `
            /td sha256 `
            /tr 'http://timestamp.digicert.com' `
            ${{ env.app_name }}-Setup.exe

          Remove-Item -Recurse -Force certificate

      - name: Upload installer
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.app_name }}-windows-installer
          path: ${{ env.app_name }}-Setup.exe
